[gcode_macro CG28]
gcode:
	{% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}

[gcode_macro HEATSOAK]
gcode:
	M104 S245 ; set hotend to 245 (ABS) and don't wait
	M140 S115 ; set bed to 115 and don't wait
        SET_FAN_SPEED FAN=Nevermore SPEED=1
	CG28 ; conditional home
	G90 ; absolute positioning
	G1 X55 Y350 F6800 ; Move to bucket

[gcode_macro SWIPENOZZLE]
gcode:
	CG28
        G0 F5000
	SAVE_GCODE_STATE NAME=SWIPENOZZLE
	G90
	G0 X85 Y350 Z15 F5000
	G0 Z2.5 F1500
	G0 X125 F5000
	G0 X85 F5000
	G0 X125 F5000
	G0 X85 F5000
	G0 Z15 F1500
	G0 F5000
	RESTORE_GCODE_STATE NAME=SWIPENOZZLE MOVE=1 ; move back to where we were

[gcode_macro BUCKET]
gcode:
	CG28
	G90
	G0 X55 Y350 Z25 F5000

[gcode_macro FILAMENT_UNLOAD]
gcode:
	M83                    # set extruder to relative extrusion
	G90                    # set toolhead to absolute position
	G1 Z80 F100000         
	G1 X150 Y50 F100000    # move up and to front/center to straighten filament path
	G1 E3  F300            # extrude slowly to soften tip of filament
	G1 E-30 F100000        # quickly yank filament back clear of hotend
	G1 E-80 F1800          # ensure filament is clear of extruder gears
	M82                    # set extruder to absolute extrusion

[gcode_macro FILAMENT_LOAD]
gcode:
    M83                    # set extruder to relative extrusion
    G90                    # set toolhead to absolute position
    G1 Z80 F100000
    G1 X150 Y50 F100000    # move up and to front/center to straighten filament path
    G1 E75 F300            # extrude filament through into hotend
    G1 E30 F240            # slowly extrude through hotend to partially purge previous filament
    M82                    # set extruder to absolute extrusion

[gcode_macro PURGE_LINE]
gcode:

  G0 X340 Y50 F3000              ; Go to side
  G0 Z0.25                      ;
  G1 E15 F200                    ; purge blob
  G92 E0                        ; zero the extruded length
  G1 Y330 E7.5 F800              ; Extrude purge line
  #G1 Y300 E-.1 F800              ; Retract while wiping on purged line
  G1 Z4                          ; lift z

[gcode_macro PARKCENTER]
gcode:
	CG28
	SAVE_GCODE_STATE NAME=PARKCENTER
	G90
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500	
	RESTORE_GCODE_STATE NAME=PARKCENTER

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1   ; move closer during print to adjust squish
    
[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1
[gcode_macro LightsOff]
gcode:
    SET_LED LED=NeoPixels VALUE=0
[gcode_macro LightsOn]
gcode:
    SET_LED LED=NeoPixels RED=1 GREEN=1 BLUE=1
[gcode_macro Red]
gcode:
    SET_LED LED=NeoPixels RED=1 GREEN=0 BLUE=0
[gcode_macro Blue]
gcode:
    SET_LED LED=NeoPixels RED=0 GREEN=0 BLUE=1
[gcode_macro Green]
gcode:
    SET_LED LED=NeoPixels RED=0 GREEN=1 BLUE=0
[gcode_macro Purple]
gcode:
    SET_LED LED=NeoPixels RED=1 GREEN=0 BLUE=1
[gcode_macro Yellow]
gcode:
    SET_LED LED=NeoPixels RED=1 GREEN=1 BLUE=0
[gcode_macro White]
gcode:
    SET_LED LED=NeoPixels RED=1 GREEN=1 BLUE=1

[delayed_gcode shutdown_machine]
gcode:
     {action_call_remote_method("shutdown_machine")}
initial_duration: 0.0

[menu __main __poweroff]
type: command
enable: {printer.idle_timeout.state != "Printing"}
name: Turn off Pi
gcode:
     M117 Shutdown_RPI
     M118 Shutdown_RPI
     { menu.exit() }
     UPDATE_DELAYED_GCODE ID=shutdown_machine DURATION=1

[delayed_gcode reboot_machine]
gcode:
     {action_call_remote_method("reboot_machine")}
initial_duration: 0.0

[menu __main __rebootpi]
type: command
enable: {printer.idle_timeout.state != "Printing"}
name: Reboot Pi
gcode:
     M117 Reboot_RPI
     M118 Reboot_RPI
     { menu.exit() }
     UPDATE_DELAYED_GCODE ID=reboot_machine DURATION=1

[menu __main __heatsoak]
type: command
enable: {printer.idle_timeout.state != "Printing"}
name: Heatsoak
gcode: HEATSOAK
     M117 Heat Soaking...
     M118 Heat Soaking...
     { menu.exit() }

[menu __main __lightson]
type: command
name: Lights On
gcode: LightsOn
     { menu.exit() }

[menu __main __lightsoff]
type: command
name: Lights Off
gcode: LightsOff
     { menu.exit() }
